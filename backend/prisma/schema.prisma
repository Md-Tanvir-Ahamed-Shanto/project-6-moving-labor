generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

enum Role {
  admin
  user
  labor
}

enum Status {
  pending
  confirmed
  completed
}

enum PaymentStatus {
  pending
  paid
  refunded
}

enum PaymentTable {
  completed
  failed
}

model User {
  id        Int       @id @default(autoincrement())
  name      String
  email     String    @unique
  password  String
  phone     String
  role      Role      @default(user)
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt
  Booking   Booking[]
  Quotes    Quotes[]
}

model Service {
  id          Int       @id @default(autoincrement())
  serviceName String
  imageUrl    String
  Booking     Booking[]
}

model Proces {
  id          Int    @id @default(autoincrement())
  processName String
  description String
}

model Feature {
  id          Int    @id @default(autoincrement())
  featureName String
  description String
}

model Statistic {
  id          Int @id @default(autoincrement())
  value       String
  title       String
  description String
}

model Social {
  id          Int    @id @default(autoincrement())
  socialName  String
  url         String
}

model Booking {
  id                  Int           @id @default(autoincrement())
  userId              Int
  user                User          @relation(fields: [userId], references: [id])
  serviceId           Int
  service             Service       @relation(fields: [serviceId], references: [id])
  bookingDate         DateTime
  status              Status        @default(pending)
  totalPrice          Float
  specialInstructions String?
  paymentStatus       PaymentStatus @default(pending)
  createdAt           DateTime      @default(now())
}

model Quotes {
  id             Int      @id @default(autoincrement())
  userId         Int
  user           User     @relation(fields: [userId], references: [id])
  estimatedPrice Float
  serviceType    String
  distance       Float
  weightEstimate Float
  createdAt      DateTime @default(now())
}

// model Payment {
//   id            Int          @id @default(autoincrement())
//   userId        Int
//   user          User         @relation(fields: [userId], references: [id])
//   bookingId     Int
//   booking       Booking      @relation(fields: [bookingId], references: [id])
//   amountPaid    Float
//   paymentDate   DateTime
//   paymentMethod String
//   status        PaymentTable
// }

model Contact {
  id      Int    @id @default(autoincrement())
  email   String
  phone   String
  address String
}

model AboutUs {
  id      Int    @id @default(autoincrement())
  title   String
  content String
}

model Message {
  id      Int    @id @default(autoincrement())
  name    String
  email   String
  subject String
  message String
}

model Hero {
  id      Int    @id @default(autoincrement())
  title   String
  content String
  imageUrl   String
}

model Converage {
  id      Int    @id @default(autoincrement())
  title   String
}

model Blog {
  id      Int    @id @default(autoincrement())
  title   String
  content String
  imageUrl   String
}